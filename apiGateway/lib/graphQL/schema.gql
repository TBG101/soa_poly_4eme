type User {
  id: ID!
  username: String!
}

type Product {
  id: ID!
  name: String
  description: String
  stock: Int
  price: Float
}

type OrderProduct {
  productId: ID!
  quantity: Int!
}

type Order {
  id: ID!
  userId: ID!
  products: [OrderProduct]!
  price: Float!
}

type jwtToken {
  token: String!
}

type ProductListResponse {
  page: Int
  limit: Int
  total: Int
  totalPage: Int
  search: String
  products: [Product!]
}

type Query {
  getUser: User
  getProduct(id: ID!): Product
  getProductList(page: Int, limit: Int, search: String): ProductListResponse
  getOrder(id: ID!): Order
  getOrderById(orderId: ID!): Order
  getOrdersByUserId: [Order]
}
input ProductDetail {
  productId: ID
  quantity: Int
}

type Logs {
  level: String
  message: String
  source: String
}

type LogResponse {
  success: Boolean
  error: String
}

type Mutation {
  # Mutations for user
  createUser(username: String!, password: String!): User

  # order
  createOrder(products: [ProductDetail]): Order

  # product
  createProduct(
    name: String!
    stock: Int!
    description: String!
    price: Float!
  ): Product

  login(username: String!, password: String!): jwtToken!

  sendLogs(level: String!, message: String!, source: String!): LogResponse
}
